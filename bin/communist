#!/usr/bin/ruby
require 'yaml'

CONFIG_PATH = File.expand_path("~/.communist.yml")

def server 
  "#{@options[:user]}@#{@options[:server]}"
end

def auth_configured?
  `ssh -o PasswordAuthentication=no #{server} "echo yup"` =~ /yup/
end

def push_keypair
  `cat ~/.ssh/id_rsa.pub | ssh #{server} 'cat >> .ssh/authorized_keys'`
end

def get_available_port
  puts "finding available port... "
  port = 2222
  port += 1 while `ssh #{server} "sudo lsof -iTCP:#{port}"` != ""
  puts "using port #{port}"
  port
end

def init_options
  puts "Looks like you've just installed communist. Let's get you set up, comrade."
  options = {}
  print "Hostname of shared server: "
  options[:server] = gets.chomp
  print "Username you'll use to connect to shared server: "
  options[:user] = gets.chomp

  File.open(CONFIG_PATH, 'w+') {|f| f.write(YAML::dump(options)) }
  load_options
end

def load_options
  if File.exists?(CONFIG_PATH)
    @options = YAML::load(IO.read(CONFIG_PATH)) 
  else
    init_options
  end
end

load_options

unless auth_configured?
  puts "Adding ~/.ssh/id_rsa.pub to #{server}:~/.ssh/authorized_keys ..."
  push_keypair
end

command = ARGV.shift
case command
when 'listen'
  port = get_available_port
 `ssh -nNT -R #{port}:localhost:22 #{server}`
when 'join'
  Kernel.exec "ssh -t #{server} \"ssh -t #{@options[:user]}@localhost -p 2222 wemux\""
else 
  puts "omfg doin' wrong"
end

